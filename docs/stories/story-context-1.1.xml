<?xml version="1.0" encoding="UTF-8"?>
<story-context id="bmad/bmm/workflows/4-implementation/story-context" v="1.0">
  <metadata>
    <epicId>1</epicId>
    <storyId>1</storyId>
    <title>Project Backbone</title>
    <status>Draft</status>
    <generatedAt>2025-01-27</generatedAt>
    <generator>BMAD Story Context Workflow</generator>
    <sourceStoryPath>docs/stories/story-social-music-foundation-1.md</sourceStoryPath>
  </metadata>

  <story>
    <asA>music producer</asA>
    <iWant>a functional dashboard with navigation and placeholder pages for video generation and posts management</iWant>
    <soThat>I have a solid foundation to build the Social Music platform upon</soThat>
    
    <tasks>
      <task>Create `app/dashboard/layout.tsx` with sidebar navigation (AC: 1, 2, 3)</task>
      <task>Create `components/sidebar.tsx` with navigation items (AC: 2, 3)</task>
      <task>Create `components/header.tsx` with logo and user menu (AC: 4)</task>
      <task>Create `components/footer.tsx` with social links (AC: 5)</task>
      <task>Create `app/dashboard/page.tsx` with welcome message (AC: 8)</task>
      <task>Create `app/dashboard/video-generation/page.tsx` with placeholder content (AC: 6)</task>
      <task>Create `app/dashboard/posts/page.tsx` with placeholder content (AC: 7)</task>
      <task>Update `app/page.tsx` with landing page content (AC: 9)</task>
      <task>Verify `middleware.ts` protects `/dashboard/*` routes (AC: 10)</task>
      <task>Test responsive design on mobile and desktop (AC: 11)</task>
      <task>Test navigation between all pages (AC: 12)</task>
    </tasks>
  </story>

  <acceptanceCriteria>
    <criterion id="1">Dashboard layout with sidebar navigation is created and functional</criterion>
    <criterion id="2">Sidebar displays navigation items: Dashboard, Video Generation, Posts Management</criterion>
    <criterion id="3">Sidebar shows active state for current page</criterion>
    <criterion id="4">Header component displays logo and user menu with logout functionality</criterion>
    <criterion id="5">Footer component displays social media links (Instagram, Twitter, TikTok, YouTube)</criterion>
    <criterion id="6">Video Generation page displays placeholder content describing the page</criterion>
    <criterion id="7">Posts Management page displays placeholder content describing the page</criterion>
    <criterion id="8">Dashboard home page displays welcome message and quick stats placeholder</criterion>
    <criterion id="9">Landing page displays hero section, features section, and call-to-action</criterion>
    <criterion id="10">Protected routes redirect unauthenticated users to login</criterion>
    <criterion id="11">All pages are responsive on mobile and desktop</criterion>
    <criterion id="12">Navigation works correctly between all pages</criterion>
  </acceptanceCriteria>

  <artifacts>
    <docs>
      <doc 
        path="docs/product-brief-social-music-2025-01-27.md"
        title="Product Brief: Social Music"
        section="MVP Scope - Core Features"
        snippet="Simple Dashboard: View all posts, Track posting status, View generated content. Rationale: User needs visibility into their content."
      />
      <doc 
        path="docs/tech-spec-social-music-backbone.md"
        title="Technical Specification"
        section="Story 1: Project Backbone"
        snippet="Build the foundational UI structure and navigation system for the Social Music platform. This includes creating dashboard layout with sidebar navigation, building placeholder pages for video generation and posts management, implementing header with user menu and footer with social links."
      />
      <doc 
        path="docs/tech-spec-social-music-backbone.md"
        title="Technical Specification"
        section="Implementation Stack"
        snippet="Frontend: Next.js 14.2.0 (App Router), React 18.3.1, TypeScript 5.3.3, Tailwind CSS 3.4.1, shadcn/ui components (existing). Backend: Supabase Auth (existing), Supabase PostgreSQL 15.1, Supabase JavaScript Client 2.39.3."
      />
      <doc 
        path="docs/tech-spec-social-music-backbone.md"
        title="Technical Specification"
        section="Technical Details - Story 1"
        snippet="Sidebar Navigation: Dashboard (home icon), Video Generation (video icon), Posts Management (list icon). Active state highlighting. Collapsible on mobile. User profile section at bottom."
      />
      <doc 
        path="docs/tech-spec-social-music-backbone.md"
        title="Technical Specification"
        section="Technical Details - Story 1"
        snippet="Protected Routes: Protect `/dashboard/*` routes. Redirect unauthenticated users to login. Use existing Supabase middleware."
      />
      <doc 
        path="docs/ux-design-standard-social-music.md"
        title="UX Design Standard"
        section="Component Design - Buttons"
        snippet="Primary Button: background: linear-gradient(135deg, #8B5CF6, #3B82F6), color: white, padding: 12px 24px, border-radius: 8px, font-weight: 600, font-size: 16px, box-shadow: 0 4px 12px rgba(139, 92, 246, 0.3)"
      />
      <doc 
        path="docs/ux-design-standard-social-music.md"
        title="UX Design Standard"
        section="Color Palette"
        snippet="Primary Colors: Primary Purple: #8B5CF6 (Violet-500), Primary Blue: #3B82F6 (Blue-500), Gradient: Linear gradient from Purple to Blue (#8B5CF6 â†’ #3B82F6)"
      />
      <doc 
        path="docs/ux-design-standard-social-music.md"
        title="UX Design Standard"
        section="Navigation - Sidebar (Dashboard)"
        snippet="Width: 256px, Background: #F8FAFC, Active State: Purple background with white text, Hover State: Light purple background"
      />
      <doc 
        path="docs/epics-social-music.md"
        title="Epics and Stories"
        section="Epic 1: Social Music Foundation"
        snippet="Epic 1.1: Project Backbone - Build foundational UI structure with dashboard layout, navigation, and placeholder pages for core features"
      />
      <doc 
        path="docs/brainstorming-session-results-2025-01-27.md"
        title="Brainstorming Session Results"
        section="Design Principles"
        snippet="Speed, minimal friction, producer control, automation, simplicity. Visual consistency across all platforms."
      />
    </docs>

    <code>
      <file 
        path="middleware.ts" 
        kind="middleware" 
        symbol="middleware"
        lines="1-20"
        reason="Existing middleware for route protection that will need to be extended to protect /dashboard/* routes"
      />
      <file 
        path="lib/supabase/middleware.ts" 
        kind="utility"
        symbol="updateSession"
        lines="5-40"
        reason="Supabase session management that handles authentication checking and redirects"
      />
      <file 
        path="lib/supabase/client.ts" 
        kind="utility"
        symbol="createClient"
        lines="3-8"
        reason="Client-side Supabase client for authentication operations"
      />
      <file 
        path="lib/supabase/server.ts" 
        kind="utility"
        symbol="createClient"
        lines="9-34"
        reason="Server-side Supabase client for authenticated operations in dashboard"
      />
      <file 
        path="components/login-form.tsx" 
        kind="component"
        symbol="LoginForm"
        lines="1-110"
        reason="Existing login component that users will be redirected to from protected dashboard routes"
      />
      <file 
        path="app/layout.tsx" 
        kind="layout"
        symbol="RootLayout"
        lines="22-41"
        reason="Root layout with ThemeProvider and Geist font - dashboard layout should inherit from this"
      />
      <file 
        path="app/protected/layout.tsx" 
        kind="layout"
        symbol="ProtectedLayout"
        lines="8-48"
        reason="Example of existing protected layout pattern to reference for dashboard layout structure"
      />
      <file 
        path="components/ui/button.tsx" 
        kind="component"
        symbol="Button"
        lines="1-50"
        reason="shadcn/ui button component to use for all buttons in dashboard navigation and CTAs"
      />
      <file 
        path="lib/utils.ts" 
        kind="utility"
        symbol="cn"
        lines="1-10"
        reason="Utility for merging Tailwind classes with clsx and tailwind-merge"
      />
    </code>

    <dependencies>
      <node>
        <package name="next" version="latest" />
        <package name="react" version="19.0.0" />
        <package name="react-dom" version="19.0.0" />
        <package name="@supabase/supabase-js" version="latest" />
        <package name="@supabase/ssr" version="latest" />
        <package name="tailwindcss" version="3.4.1" />
        <package name="lucide-react" version="0.511.0" />
        <package name="@radix-ui/react-dropdown-menu" version="2.1.14" />
        <package name="next-themes" version="0.4.6" />
      </node>
    </dependencies>
  </artifacts>

  <interfaces>
    <interface 
      name="Supabase Auth"
      kind="authentication service"
      signature="supabase.auth.getUser(), supabase.auth.signOut()"
      path="lib/supabase/client.ts"
    />
    <interface 
      name="Next.js Middleware"
      kind="route protection middleware"
      signature="export async function middleware(request: NextRequest): Promise&lt;NextResponse&gt;"
      path="middleware.ts"
    />
    <interface 
      name="Next.js Layout"
      kind="layout component"
      signature="export default function Layout({ children }: { children: React.ReactNode })"
      path="app/layout.tsx"
    />
  </interfaces>

  <constraints>
    <constraint>Use Next.js 14 App Router with React Server Components (existing pattern)</constraint>
    <constraint>Follow Tailwind CSS styling with shadcn/ui components (existing UI library)</constraint>
    <constraint>Protect all /dashboard/* routes using existing Supabase auth middleware</constraint>
    <constraint>Follow UX design standard: purple/blue gradient primary colors, modern minimalist aesthetic</constraint>
    <constraint>Ensure responsive design: mobile (< 768px), tablet (768-1023px), desktop (â‰¥ 1024px)</constraint>
    <constraint>Use TypeScript for all components with proper type safety</constraint>
    <constraint>Maintain consistent navigation pattern across all dashboard pages</constraint>
    <constraint>All buttons should use gradient background (linear-gradient(135deg, #8B5CF6, #3B82F6))</constraint>
    <constraint>Sidebar width: 256px fixed on desktop, collapsible on mobile</constraint>
    <constraint>Use lucide-react icons for all iconography</constraint>
  </constraints>

  <tests>
    <standards>
      Testing approach: Use Jest for unit tests, React Testing Library for component tests, and manual testing for responsive design. Focus on navigation flow, protected route redirects, and component rendering. No E2E tests required for this story.
    </standards>
    
    <locations>
      <location>__tests__/components/ (for component tests)</location>
      <location>__tests__/app/ (for page tests)</location>
      <location>Manual testing for responsive design</location>
    </locations>
    
    <ideas>
      <idea ac="1">Test that dashboard layout renders with sidebar visible on desktop</idea>
      <idea ac="2">Test that all three navigation items (Dashboard, Video Generation, Posts) appear in sidebar</idea>
      <idea ac="3">Test that active navigation item is highlighted with purple background</idea>
      <idea ac="4">Test that header displays logo and user menu, logout functionality works</idea>
      <idea ac="5">Test that footer displays all four social media links (Instagram, Twitter, TikTok, YouTube)</idea>
      <idea ac="6">Test that Video Generation page displays placeholder content</idea>
      <idea ac="7">Test that Posts Management page displays placeholder content</idea>
      <idea ac="8">Test that Dashboard home page displays welcome message</idea>
      <idea ac="9">Test that landing page has hero section, features section, and CTA</idea>
      <idea ac="10">Test that unauthenticated user is redirected to login when accessing /dashboard/*</idea>
      <idea ac="11">Test responsive design: verify pages work on mobile (< 768px) and desktop (â‰¥ 1024px)</idea>
      <idea ac="12">Test navigation: clicking sidebar items navigates to correct pages</idea>
    </ideas>
  </tests>

</story-context>

